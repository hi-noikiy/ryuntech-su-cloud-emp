<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryuntech.saas.api.mapper.ReceivableContractMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.ryuntech.saas.api.model.ReceivableContract">
        <id column="CONTRACT_ID" property="contractId" />
        <result column="CONTRACT_NAME" property="contractName" />
        <result column="CUSTOMER_ID" property="customerId" />
        <result column="CUSTOMER_NAME" property="customerName" />
        <result column="CONTRACT_TIME" property="contractTime" />
        <result column="CONTRACT_AMOUNT" property="contractAmount" />
        <result column="BALANCE_AMOUNT" property="balanceAmount" />
        <result column="COLLECTION_AMOUNT" property="collectionAmount" />
        <result column="STATUS" property="status" />
        <result column="DEPARTMENT" property="department" />
        <result column="CONTRACT_CODE" property="contractCode" />
        <result column="CONTACTS" property="contacts" />
        <result column="CONTACTS_PHONE" property="contactsPhone" />
        <result column="STAFF_ID" property="staffId" />
        <result column="STAFF_NAME" property="staffName" />
        <result column="ATTACHMENT_CODE" property="attachmentCode" />
        <result column="TOTAL_PLAN_PERIODES" property="totalPlanPeriodes" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        CONTRACT_ID, CONTRACT_NAME, CUSTOMER_ID, CUSTOMER_NAME, CONTRACT_TIME, CONTRACT_AMOUNT, BALANCE_AMOUNT, COLLECTION_AMOUNT, STATUS, DEPARTMENT, CONTRACT_CODE, CONTACTS, CONTACTS_PHONE, STAFF_ID, STAFF_NAME, ATTACHMENT_CODE, TOTAL_PLAN_PERIODES
    </sql>


    <select id="selectSumByRContract"  resultType="java.lang.String">
        select
            sum(balance_amount) balanceAmounts
        from
            ryn_receivable_contract
        <where>
            <if test="receivableContractDTO.customerId!=null and receivableContractDTO.customerId!=''">
                customer_id like concat('%',#{receivableContractDTO.customerId},'%')
            </if>

            <if test="receivableContractDTO.statusList!=null and receivableContractDTO.statusList.size()>0">
                and status in
                <foreach collection="receivableContractDTO.statusList" item="status" index="index" open="(" close=")" separator=",">
                    #{status}
                </foreach>
            </if>
        </where>
        group by customer_id
    </select>


    <select id="selectPageList" resultMap="BaseResultMap" resultType="com.ryuntech.saas.api.dto.ReceivableContractDTO">
        select
            ryn_receivable_contract.*,
            ryn_customer_user_info.company_id COMPANY_ID,
            ryn_customer_user_info.company_name COMPANY_NAME,
            ryn_customer_user_info.customer_name CUSTOMER_NAME,
            ryn_customer_user_info.customer_id CUSTOMER_ID
        from
            ryn_receivable_contract
            left join
            ryn_customer_user_info on ryn_receivable_contract.customer_id = ryn_customer_user_info.customer_id
        <where>
            <if test="receivableContract.contractId!=null and receivableContract.contractId!=''">
                ryn_receivable_contract.contract_id like concat('%',#{receivableContract.contractId},'%')
            </if>
            <if test="receivableContract.contractName!=null and receivableContract.contractName!=''">
                and ryn_receivable_contract.contract_name like concat('%',#{receivableContract.contractName},'%')
            </if>
            <if test="receivableContract.staffId!=null and receivableContract.staffId!=''">
                and ryn_receivable_contract.staff_id like concat('%',#{receivableContract.staffId},'%')
            </if>

            <if test="receivableContract.statusList!=null and receivableContract.statusList.size()>0">
                and ryn_receivable_contract.status in
                <foreach collection="receivableContract.statusList" item="status" index="index" open="(" close=")" separator=",">
                    #{status}
                </foreach>
            </if>

        </where>
    </select>

    <select id="getDepartmentsContractAmounts" resultType="java.lang.String">
         SELECT
          IFNULL(sum(rrc.`CONTRACT_AMOUNT`), '0.00') saleAmount
         FROM
          `ryn_department` rd,
          `ryn_receivable_contract` rrc,
          `ryn_employee` re
         WHERE
              rd.`DEPARTMENT_ID` = re.`DEPARTMENT_ID`
          AND re.`EMPLOYEE_ID` = rrc.`STAFF_ID`
          AND rd.`DEPARTMENT_ID` IN
            <foreach collection="departmentIds" item="departmentId"  open="(" separator="," close=")">
                #{departmentId}
            </foreach>
            <if test="beginTime != null and beginTime != ''">
                AND date(rrc.`CONTRACT_TIME`) <![CDATA[ >= ]]> #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND date(rrc.`CONTRACT_TIME`) <![CDATA[ <= ]]> #{endTime}
            </if>
    </select>

    <select id="getDepartmentsRepayAmounts" resultType="java.lang.String">
        SELECT
          IFNULL(sum(r2.`AMOUNT`), '0.00') repayAmount
        FROM
          `ryn_employee` re,
          `ryn_receivable_contract` r1,
          `ryn_receivable_collection` r2
        WHERE r1.`CONTRACT_ID` = r2.`CONTRACT_ID`
          AND re.`EMPLOYEE_ID` = r1.`STAFF_ID`
          AND r2.`STATUS` = 1
          AND re.`DEPARTMENT_ID` IN
            <foreach collection="departmentIds" item="departmentId"  open="(" separator="," close=")">
                #{departmentId}
            </foreach>
          <if test="beginTime != null and beginTime != ''">
              AND date(r2.`TIME`) <![CDATA[ >= ]]> #{beginTime}
          </if>
          <if test="endTime != null and endTime != ''">
              AND date(r2.`TIME`) <![CDATA[ <= ]]> #{endTime}
          </if>
    </select>

    <select id="getEmployeesContractAmounts" resultType="com.ryuntech.saas.api.dto.ReceiveBalanceContractAmount">
        SELECT
          re.`EMPLOYEE_ID` employeeId,
          IFNULL(sum(r1.`CONTRACT_AMOUNT`), '0.00') saleAmount
        FROM
          `ryn_employee` re
          LEFT JOIN `ryn_receivable_contract` r1 ON re.`EMPLOYEE_ID` = r1.`STAFF_ID`
            <if test="beginTime != null and beginTime != ''">
                AND date(r1.`CONTRACT_TIME`) <![CDATA[ >= ]]> #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND date(r1.`CONTRACT_TIME`) <![CDATA[ <= ]]> #{endTime}
            </if>
          WHERE re.`DEPARTMENT_ID` IN
            <foreach collection="departmentIds" item="departmentId"  open="(" separator="," close=")">
                #{departmentId}
            </foreach>
        GROUP BY re.`EMPLOYEE_ID`;
    </select>

    <select id="getEmployeesRepayAmounts" resultType="com.ryuntech.saas.api.dto.ReceiveBalanceRepayAmount">
        SELECT
          re.`EMPLOYEE_ID` employeeId,
          IFNULL(sum(r2.`AMOUNT`), '0.00') repayAmount
        FROM
          `ryn_employee` re
        LEFT JOIN `ryn_receivable_contract` r1 ON re.`EMPLOYEE_ID` = r1.`STAFF_ID`
        LEFT JOIN `ryn_receivable_collection` r2 ON r1.`CONTRACT_ID` = r2.`CONTRACT_ID` AND r2.`STATUS` = 1
        <if test="beginTime != null and beginTime != ''">
            AND date(r2.`TIME`) <![CDATA[ >= ]]> #{beginTime}
        </if>
        <if test="endTime != null and endTime != ''">
            AND date(r2.`TIME`) <![CDATA[ <= ]]> #{endTime}
        </if>
        WHERE re.`DEPARTMENT_ID` IN
            <foreach collection="departmentIds" item="departmentId"  open="(" separator="," close=")">
                #{departmentId}
            </foreach>
        GROUP BY re.`EMPLOYEE_ID`
    </select>

    <select id="getCustomersContractAmounts" resultType="com.ryuntech.saas.api.dto.ReceiveBalanceContractAmount">
        SELECT
          rcui.`CUSTOMER_ID` customerId,
          IFNULL(sum(r1.`CONTRACT_AMOUNT`), '0.00') saleAmount
        FROM
          `ryn_customer_user_info` rcui,
          `ryn_receivable_contract` r1,
          `ryn_employee` re
        WHERE r1.`CUSTOMER_ID` = rcui.`CUSTOMER_ID` AND re.`EMPLOYEE_ID` = r1.`STAFF_ID`
            AND re.`DEPARTMENT_ID` IN
            <foreach collection="departmentIds" item="departmentId"  open="(" separator="," close=")">
                #{departmentId}
            </foreach>
            <if test="beginTime != null and beginTime != ''">
                AND date(r1.`CONTRACT_TIME`) <![CDATA[ >= ]]> #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND date(r1.`CONTRACT_TIME`) <![CDATA[ <= ]]> #{endTime}
            </if>
        GROUP BY rcui.`CUSTOMER_ID`;
    </select>

    <select id="getCustomersRepayAmounts" resultType="com.ryuntech.saas.api.dto.ReceiveBalanceRepayAmount">
        SELECT
          rcui.`CUSTOMER_ID` customerId,
          IFNULL(sum(r2.`AMOUNT`), '0.00') repayAmount
        FROM
            `ryn_customer_user_info` rcui,
            `ryn_employee` re,
            `ryn_receivable_contract` r1
        LEFT JOIN `ryn_receivable_collection` r2  ON r1.`CONTRACT_ID` = r2.`CONTRACT_ID` AND r2.`STATUS` = 1
            <if test="beginTime != null and beginTime != ''">
                AND date(r2.`TIME`) <![CDATA[ >= ]]> #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND date(r2.`TIME`) <![CDATA[ <= ]]> #{endTime}
            </if>
        WHERE rcui.`CUSTOMER_ID` = r1.`CUSTOMER_ID`
        and re.`EMPLOYEE_ID` = r1.`STAFF_ID`
        and re.`DEPARTMENT_ID` IN
        <foreach collection="departmentIds" item="departmentId"  open="(" separator="," close=")">
            #{departmentId}
        </foreach>
        GROUP BY rcui.`CUSTOMER_ID`;
    </select>

</mapper>
